Answer each of the following:
a) _____ are used to modularize programs.
ans: Functions
b) A function is invoked with a(n) .
ans: Function Call
c) A variable known only within the function in which it’s defined is called a(n) .
ans: Local variable
d) The _______ statement in a called function is used to pass the value of an expression
back to the calling function.
ans: return 
e) _______ Keyword is used in a function header to indicate that a function does not 
return a value or to indicate that a function contains no parameters.
ans: void
f) The _______ of an identifier is the portion of the program in which the identifier can
be used.
ans: scope
g) The three ways to return control from a called function to a caller are ,
 and .
 ans: return, encountering a closing right brace
h) A(n) allows the compiler to check the number, types, and order of the arguments passed to a function.
i) The function is used to produce random numbers.
j) The function is used to set the random number seed to randomize a program.
k) The storage-class specifiers are , , and .
l) Variables declared in a block or in the parameter list of a function are assumed to be of
storage class unless specified otherwise.
m) A non-static variable defined outside any block or function is a(n) variable.
n) For a local variable in a function to retain its value between calls to the function, it must
be declared with the storage-class specifier.
o) The four possible scopes of an identifier are , , and .
p) A function that calls itself either directly or indirectly is a(n) function.
q) A recursive function typically has two components: one that provides a means for the
recursion to terminate by testing for a(n) case, and one that expresses the
problem as a recursive call for a slightly simpler problem than the original call.
5.2 For the following program, state the scope (either function scope, file scope, block scope or
function-prototype scope) of each of the following elements.
a) The variable x in main.
b) The variable y in cube.
c) The function cube.
d) The function main.
e) The function prototype for cube.
f) The identifier y in the function prototype for cube.
 Self-Review Exercises 233
5.3 Write a program that tests whether the examples of the math library function calls shown
in Fig. 5.2 actually produce the indicated results.
5.4 Give the function header for each of the following functions.
a) Function hypotenuse that takes two double-precision floating-point arguments, side1
and side2, and returns a double-precision floating-point result.
b) Function smallest that takes three integers, x, y, z, and returns an integer.
c) Function instructions that does not receive any arguments and does not return a value. [Note: Such functions are commonly used to display instructions to a user.]
d) Function intToFloat that takes an integer argument, number, and returns a floatingpoint result.
5.5 Give the function prototype for each of the following:
a) The function described in Exercise 5.4(a).
b) The function described in Exercise 5.4(b).
c) The function described in Exercise 5.4(c).
d) The function described in Exercise 5.4(d).
5.6 Write a declaration for floating-point variable lastVal that’s to retain its value between calls
to the function in which it’s defined.
5.7 Find the error in each of the following program segments and explain how the error can be
corrected (see also Exercise 5.46):
a) int g(void) 
{
 printf("%s", Inside function g\n");
 int h(void) 
 {
 printf("%s", Inside function h\n");
 }
}
b) int sum(int x, int y) 
{
 int result = x + y;
}
c) void f(float a); 
{
 float a;
 printf("%f", a);
}
1 #include <stdio.h>
2 int cube(int y); 
3
4 int main(void)
5 {
6 for (int x = 1; x <= 10; ++x)
7 printf("%u\n", cube(x));
8 }
9
10 int cube(int y)
11 {
12 return y * y * y;
13 }
234 Chapter 5 C Functions
d) int sum(int n) 
{
 if (0 == n) {
 return 0; // 
 }
 else {
 n + sum(n - 1);
 }
}
e) void product(void) 
{
 printf("%s", "Enter three integers: ")
 int a, b, c;
 scanf("%d%d%d", &a, &b, &c);
 int result = a * b * c;
 printf("Result is %d", result);
 return result;
}